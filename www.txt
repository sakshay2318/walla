Slide 2: My Approach ‚Äì Hybrid Security Scanning Script
Title: üõ†Ô∏è My Contribution: Custom Script-Based Security Scanner

Regex-based pattern scanning with AST validation

Over 3000+ patterns across Java, Scala, and JavaScript

11 scan categories (IDOR, Role-Based Access, etc.)

Dev-friendly options: add patterns, exclude paths, choose languages

Findings stored in JSON, exported as PDF/CSV, with a UI manager

Slide 3: Challenges I Faced
Title: ‚ö†Ô∏è Key Challenges During Development

Regex matches alone created too many false positives

AST validation integration was technically complex

Creating reliable, scalable patterns for 3 languages took time

UI/UX for developers to review findings needed clear workflows

Syncing with QA/devs to validate patterns was time-intensive

Slide 4: Teamwork & Impact
Title: ü§ù Collaborating for Secure Code

Worked closely with QA & developers to refine test cases

Designed tool to be plug & play for any microservice team

Empowered devs to self-review security flaws early

Feedback loop helped us evolve new patterns & detection logic

Slide 5: Learnings & Expectations
Title: üéØ Key Takeaways from My Internship

Learned how static & dynamic analysis really work in practice

Understood importance of dev-friendly security tooling

Gained hands-on with AST parsing, regex tuning, JSON reporting

Expected to drive independent research, own delivery, and cross-team coordination


Slide 4: Key Learnings from the Internship
Understood real-world gaps in SAST and DAST tooling

Learned how to build scalable, secure, and reusable scripts

Gained hands-on experience in AST parsing for code validation

Developed regex patterns to detect complex auth vulnerabilities

Improved cross-language support (Java, Scala, JS) in tooling

Learned to prioritize developer experience in security tools

Got better at debugging large codebases with layered logic

Collaborated closely with QA, security, and dev teams

Mastered how to triage, store, and present scan findings effectively

Learned how small tools can drive big shifts in secure coding culture

üéØ Slide 5: Expectations & Responsibilities During Internship
Take ownership of a real-world security problem from day one

Develop a fully functional, developer-friendly security tool

Build an extensible engine that scales across services

Minimize false positives through AST + regex validation

Work cross-functionally with QA and dev teams for feedback

Document the tool clearly for onboarding and future use

Support custom test case creation and flexible scanning logic

Ensure output is actionable via UI and reporting features

Present progress regularly to stakeholders and mentors

Demonstrate impact through measurable improvements in auth issue detection
